// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QUANLYDIEMRENLUYEN.Models;

#nullable disable

namespace QUANLYDIEMRENLUYEN.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250615153435_UpdateCascadeDelete")]
    partial class UpdateCascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicYearId"));

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AccountProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountProfile");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AdminMenu", b =>
                {
                    b.Property<int>("AdminMenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminMenuID"));

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ItemLevel")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemOrder")
                        .HasColumnType("int");

                    b.Property<string>("ItemTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentLevel")
                        .HasColumnType("int");

                    b.HasKey("AdminMenuID");

                    b.ToTable("AdminMenu");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AttendanceId");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AttendanceRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<int>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("StudentId");

                    b.ToTable("AttendanceRecord");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Criteria", b =>
                {
                    b.Property<int>("CriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriteriaId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CriteriaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluationMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<bool>("RequiresEvidence")
                        .HasColumnType("bit");

                    b.HasKey("CriteriaId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.CriteriaCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("CriteriaCategory");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.EvaluationConfig", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigId"));

                    b.Property<DateTime?>("LecturerEvalEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LecturerEvalStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SelfEvalEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SelfEvalStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("ConfigId");

                    b.HasIndex("SemesterId");

                    b.ToTable("EvaluationConfig");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.EvaluationDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<int?>("ClassMonitorScore")
                        .HasColumnType("int");

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationId")
                        .HasColumnType("int");

                    b.Property<int?>("FinalScore")
                        .HasColumnType("int");

                    b.Property<string>("LecturerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LecturerScore")
                        .HasColumnType("int");

                    b.Property<int?>("StudentScore")
                        .HasColumnType("int");

                    b.HasKey("DetailId");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("EvaluationId");

                    b.ToTable("EvaluationDetail");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.EvaluationSummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalScore")
                        .HasColumnType("int");

                    b.HasKey("SummaryId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SemesterId");

                    b.ToTable("EvaluationSummary");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Evidence", b =>
                {
                    b.Property<int>("EvidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvidenceId"));

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EvaluationId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EvidenceId");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("EvaluationId");

                    b.ToTable("Evidence");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.MeetingNotification", b =>
                {
                    b.Property<int>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MeetingId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SemesterId");

                    b.ToTable("MeetingNotification");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NotificationId");

                    b.HasIndex("AccountId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SemesterId");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.StudentEvaluation", b =>
                {
                    b.Property<int>("EvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluationId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EvaluationId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SemesterId");

                    b.ToTable("StudentEvaluation");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.SystemLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LogId");

                    b.HasIndex("AccountId");

                    b.ToTable("SystemLog");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.HasIndex("ClassId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int?>("ClassMonitorId")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.HasKey("ClassId");

                    b.HasIndex("ClassMonitorId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AccountProfile", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Attendance", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.Navigation("Class");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AttendanceRecord", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Attendance", "Attendance")
                        .WithMany()
                        .HasForeignKey("AttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Criteria", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.CriteriaCategory", "Category")
                        .WithMany("Criterias")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.EvaluationConfig", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.EvaluationDetail", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Criteria", "Criteria")
                        .WithMany()
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.StudentEvaluation", "StudentEvaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criteria");

                    b.Navigation("StudentEvaluation");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.EvaluationSummary", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Evidence", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Criteria", "Criteria")
                        .WithMany()
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.StudentEvaluation", "StudentEvaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criteria");

                    b.Navigation("StudentEvaluation");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.MeetingNotification", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("Faculty");

                    b.Navigation("Semester");

                    b.Navigation("UserCreatedBy");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Notification", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Semester", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AcademicYear", "AcademicYear")
                        .WithMany("Semesters")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.StudentEvaluation", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYDIEMRENLUYEN.Areas.Admin.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.SystemLog", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Account", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Class", "Class")
                        .WithMany("Accounts")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Faculty", "Faculty")
                        .WithMany("Accounts")
                        .HasForeignKey("FacultyId");

                    b.Navigation("Class");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Class", b =>
                {
                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Account", "ClassMonitor")
                        .WithMany()
                        .HasForeignKey("ClassMonitorId");

                    b.HasOne("QUANLYDIEMRENLUYEN.Models.Faculty", "Faculty")
                        .WithMany("Classes")
                        .HasForeignKey("FacultyId");

                    b.Navigation("ClassMonitor");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.AcademicYear", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Areas.Admin.Models.CriteriaCategory", b =>
                {
                    b.Navigation("Criterias");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Class", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("QUANLYDIEMRENLUYEN.Models.Faculty", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
